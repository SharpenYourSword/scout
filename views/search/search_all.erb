<% content_for :sidebar_left do %>
  <div class="module filters">
    <h4>Narrow Results</h4>
    <p>
      Pick a category to see more results, and filter further.
    </p>
    <ul>
      <% subscriptions.each do |subscription| %>
        <li>
          <a href="/search/<%= subscription.subscription_type %>/<%= h query %>">
            <%= subscription.search_name %>
          </a>
        </li>
      <% end %>
    </ul>

  </div>

  <div class="module data explanation small">
    <p>
      Data comes from a variety of sources. Select a category or search result for more information.
    </p>
  </div>

  <%= recent_searches %>
<% end %>

<div class="results contentArea right">
	<span class="resultsIntro">
		Create an alert to receive notifications of more results like these.
	</span>  
    <div class="pageTitle">

        <div class="searchParameters">

            <h2>"<%= h query %>"</h2>
            <% subscriptions.each do |subscription| %>
              <span class="category"><%= subscription.search_name %></span><%= ", " unless subscription == subscriptions.last %>
            <% end %>
        </div>

        <button class="follow search">
          <span>Create Alert</span>
        </button>

        <button class="following search">
          <span>Remove Alert</span>
        </button>
      <div class="clear"></div>
    </div>

    
    <% subscriptions.each do |subscription| %>
        <div class="search" id="<%= subscription.subscription_type %>" data-subscription="<%= subscription.subscription_type %>">

          <h3><%= subscription.search_name %></h3>

          <section class="container clear">
            <div class="loading">
              <span>Fetching <%= subscription.search_name.downcase %>...</span>
            </div>

            <div class="error">
              <span>There was an error while searching.</span>
            </div>

            <div class="populate">
            </div>
          </section>

        </div>
    <% end %>

</div>

<div class="clear"></div>

<script type="text/javascript">
  
  $(function() {
    initializeFilters();
    initializeControls();
    <% subscriptions.each do |subscription| %>
      search("<%= subscription.subscription_type %>");
    <% end %>
  });

  // initializes both the sidebar form filters, and the top search form
  function initializeFilters() {
    $("form.filters input.query").val("<%= h query %>");
    $("input.subscription_type").val("all");
  }

  function initializeControls() {
    // make sure to clear all events so they don't stack

    $("button.follow").hide();
    $("button.following").hide();

    <% if following %>
      $("button.following").show();
    <% else %>
      $("button.follow").show();
    <% end %>

    <% if logged_in? %>
      $("button.follow").off("click").click(follow);
      $("button.following").off("click").click(unfollow);
    <% else %>
      $("button.follow").off("click").click(function() {window.location = "/login?redirect=" + Utils.currentPath();});
      $("button.following").off("click");
    <% end %>
  }

  function currentQuery() {
    return "<%= h query %>";
  }

  function currentSubscriptionType() {
    return "all";
  }

  function follow() {
    var subscription_type = currentSubscriptionType();
    var query = encodeURIComponent(currentQuery());
    
    var subscription = $.extend({}, {
      subscription_type: subscription_type,
      query: query
    });

    $("button.follow").hide();
    $("button.following").show();

    $.post("/subscriptions", subscription, function(data) {
      Utils.log("Created new subscription.");
    }).error(function() {
      Utils.log("ERROR creating new subscription.");
      $("button.follow").show();
      $("button.following").hide();
    });

    return false;
  }

  function unfollow() {
    var subscription_type = currentSubscriptionType();
    var query = encodeURIComponent(currentQuery());
    
    var subscription = $.extend({}, {
      subscription_type: subscription_type,
      query: query
    });

    $("button.follow").show();
    $("button.following").hide();

    $.post("/subscriptions", $.extend(subscription, {_method: "delete"}), function(data) {
      Utils.log("Removed subscription.");
    }).error(function() {
      Utils.log("ERROR removing subscription.");
      $("button.follow").hide();
      $("button.following").show();
    });

    return false;
  }

  function search(subscription_type) {
    var searchOptions = {per_page: 2, page: 1};

    var query = encodeURIComponent(currentQuery());
    var container = $(".results div.search[data-subscription=" + subscription_type + "]");

    // reset elements inside tab
    container.find(".loading").show();
    container.find(".populate").html("").hide();
    
    // all search options (filters, pagination)
    var search = {};
    
    // carry along the universal and subscription-specific filters
    
    // any one-time search options (pagination)
    $.extend(search, searchOptions);

    $.get("/fetch/search/" + subscription_type + "/" + query, search, function(data) {
      
      container.find(".loading").hide();
      container.find(".populate").html(data).show();

    }).error(function() {
      container.find(".loading").hide();
      container.find(".error").show();
    });
  }
</script>
